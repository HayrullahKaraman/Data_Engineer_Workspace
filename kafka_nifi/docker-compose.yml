version: "3.9"
services:
  zookeeper:
    image: "zookeeper:3.8.0"
    container_name: zookeeper-dockerv2
    hostname: zookeeper
    ports:
      - "2181:2181"
    networks:
      - coin_network
  
  kafka:
    image: "bitnami/kafka:3.3.1"
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 0
      KAFKA_CFG_LISTENERS: "PLAINTEXT://:9092,PLAINTEXT_HOST://:29092"
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: "PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT"
      KAFKA_CFG_ADVERTISED_LISTENERS: "PLAINTEXT://127.0.0.1:9092,PLAINTEXT_HOST://kafka:29092"
      KAFKA_CFG_ZOOKEEPER_CONNECT: "zookeeper:2181/kafka"
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_CFG_ADVERTISED_HOST_NAME: "kafka"
    depends_on:
      - zookeeper
    networks:
      - coin_network

  nifi2:
    image: apache/nifi:1.13.1
    container_name: nifi-dockerv2
    ports:
      - 8080:8080
    networks:
      - coin_network
    volumes:
      - D://DataEngineer2023//kafka_nifi//data:/opt/nifi/nifi-current/var/lib/data

  db: 
    image: postgres:13
    container_name: database
    restart: unless-stopped
    environment:
       -  POSTGRES_USER=postgres
       -  POSTGRES_PASSWORD=postgres
    ports:
       - 5432:5432
    volumes: 
       - db:/var/lib/postgresql/data
    networks:
        - coin_network


volumes:
   db:
    driver : local
    
networks:
  coin_network:
    driver: bridge

